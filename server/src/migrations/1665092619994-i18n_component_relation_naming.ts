import { MigrationInterface, QueryRunner } from "typeorm";

export class i18nComponentRelationNaming1665092619994 implements MigrationInterface {
    name = 'i18nComponentRelationNaming1665092619994'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "account" ("id" SERIAL NOT NULL, "email" character varying NOT NULL, "first_name" character varying NOT NULL, "last_name" character varying NOT NULL, "password" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "authorityId" integer, "createdById" integer, CONSTRAINT "UQ_4c8f96ccf523e9a3faefd5bdd4c" UNIQUE ("email"), CONSTRAINT "PK_54115ee388cdb6d86bb4bf5b2ea" PRIMARY KEY ("id")); COMMENT ON COLUMN "account"."email" IS 'Account email will used for login'; COMMENT ON COLUMN "account"."first_name" IS 'John'; COMMENT ON COLUMN "account"."last_name" IS 'Doe'; COMMENT ON COLUMN "account"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "account"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "account"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "account_authority" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "createdById" integer, CONSTRAINT "PK_03fc793b2260ed1f3eac4bfd5d1" PRIMARY KEY ("id")); COMMENT ON COLUMN "account_authority"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "account_authority"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "account_authority"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "core_menu_group" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "createdById" integer, CONSTRAINT "PK_489dc56cef2544270242b73960e" PRIMARY KEY ("id")); COMMENT ON COLUMN "core_menu_group"."name" IS 'Group will menu at sidebar'; COMMENT ON COLUMN "core_menu_group"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "core_menu_group"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "core_menu_group"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "core_menu" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "identifier" character varying NOT NULL, "url" text DEFAULT '/', "parent" integer NOT NULL, "icon" character varying NOT NULL, "show_on_menu" character(1) NOT NULL, "show_order" integer NOT NULL, "level" integer, "group_color" character varying, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "menuGroupId" integer, "createdById" integer, CONSTRAINT "PK_d6c1892c7896ced5307d5b791c8" PRIMARY KEY ("id")); COMMENT ON COLUMN "core_menu"."name" IS 'Menu caption'; COMMENT ON COLUMN "core_menu"."identifier" IS 'Vue 3 support'; COMMENT ON COLUMN "core_menu"."url" IS 'Vue 3 route support'; COMMENT ON COLUMN "core_menu"."parent" IS 'Other menu id as parent'; COMMENT ON COLUMN "core_menu"."icon" IS 'PrimeIcon class name'; COMMENT ON COLUMN "core_menu"."show_on_menu" IS 'Y = show, N = hide'; COMMENT ON COLUMN "core_menu"."show_order" IS 'Showing order on side panel'; COMMENT ON COLUMN "core_menu"."level" IS 'Level grouping identifier'; COMMENT ON COLUMN "core_menu"."group_color" IS 'Theme customer class name for styling'; COMMENT ON COLUMN "core_menu"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "core_menu"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "core_menu"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "core_menu_permission" ("id" SERIAL NOT NULL, "domiden" character varying NOT NULL, "dispatchname" character varying NOT NULL, "servicegroup" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "menuId" integer, "createdById" integer, CONSTRAINT "PK_d6955a7d45b8afd51e818454bf4" PRIMARY KEY ("id")); COMMENT ON COLUMN "core_menu_permission"."domiden" IS 'For identify dom that granted access'; COMMENT ON COLUMN "core_menu_permission"."dispatchname" IS 'String dispatch from the dom'; COMMENT ON COLUMN "core_menu_permission"."servicegroup" IS 'For identify dom service name that contain dispatch function'; COMMENT ON COLUMN "core_menu_permission"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "core_menu_permission"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "core_menu_permission"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "account_permission" ("id" SERIAL NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "accountId" integer, "permissionId" integer, "grantedById" integer, CONSTRAINT "PK_202247292378cf3913a1edb41a0" PRIMARY KEY ("id")); COMMENT ON COLUMN "account_permission"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "account_permission"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "account_permission"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "account_privileges" ("id" SERIAL NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "accountId" integer, "menuId" integer, "grantedById" integer, CONSTRAINT "PK_220630f27107c502435de080e05" PRIMARY KEY ("id")); COMMENT ON COLUMN "account_privileges"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "account_privileges"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "account_privileges"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "core_i18n" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "language_code" character varying(2) NOT NULL, "iso_2_digits" character varying(2) NOT NULL, "iso_3_digits" character varying(3) NOT NULL, "datetime_weekday" "public"."core_i18n_datetime_weekday_enum" NOT NULL DEFAULT 'short', "datetime_era" "public"."core_i18n_datetime_era_enum" NOT NULL DEFAULT 'short', "datetime_year" "public"."core_i18n_datetime_year_enum" NOT NULL DEFAULT 'numeric', "datetime_month" "public"."core_i18n_datetime_month_enum" NOT NULL DEFAULT 'numeric', "datetime_day" "public"."core_i18n_datetime_day_enum" NOT NULL DEFAULT 'numeric', "datetime_hour" "public"."core_i18n_datetime_hour_enum" NOT NULL DEFAULT 'numeric', "datetime_minute" "public"."core_i18n_datetime_minute_enum" NOT NULL DEFAULT 'numeric', "datetime_second" "public"."core_i18n_datetime_second_enum" NOT NULL DEFAULT 'numeric', "datetime_timezone_name" "public"."core_i18n_datetime_timezone_name_enum" NOT NULL DEFAULT 'short', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "createdById" integer, CONSTRAINT "UQ_66b188d7d16c9de0b71f1715bd6" UNIQUE ("language_code"), CONSTRAINT "UQ_f68501be1d0d740e1ef6f31ebcc" UNIQUE ("iso_2_digits"), CONSTRAINT "UQ_d8689e54263de65e8ab4e10a4a4" UNIQUE ("iso_3_digits"), CONSTRAINT "PK_263b572e409aeb59a1e795b7518" PRIMARY KEY ("id")); COMMENT ON COLUMN "core_i18n"."name" IS 'Language Name'; COMMENT ON COLUMN "core_i18n"."language_code" IS 'Country language code 2 digits'; COMMENT ON COLUMN "core_i18n"."iso_2_digits" IS 'Country code 2 digits'; COMMENT ON COLUMN "core_i18n"."iso_3_digits" IS 'Country code 3 digits'; COMMENT ON COLUMN "core_i18n"."datetime_weekday" IS 'https://402.ecma-international.org/2.0/#sec-InitializeDateTimeFormat'; COMMENT ON COLUMN "core_i18n"."datetime_era" IS 'https://402.ecma-international.org/2.0/#sec-InitializeDateTimeFormat'; COMMENT ON COLUMN "core_i18n"."datetime_year" IS 'https://402.ecma-international.org/2.0/#sec-InitializeDateTimeFormat'; COMMENT ON COLUMN "core_i18n"."datetime_month" IS 'https://402.ecma-international.org/2.0/#sec-InitializeDateTimeFormat'; COMMENT ON COLUMN "core_i18n"."datetime_day" IS 'https://402.ecma-international.org/2.0/#sec-InitializeDateTimeFormat'; COMMENT ON COLUMN "core_i18n"."datetime_hour" IS 'https://402.ecma-international.org/2.0/#sec-InitializeDateTimeFormat'; COMMENT ON COLUMN "core_i18n"."datetime_minute" IS 'https://402.ecma-international.org/2.0/#sec-InitializeDateTimeFormat'; COMMENT ON COLUMN "core_i18n"."datetime_second" IS 'https://402.ecma-international.org/2.0/#sec-InitializeDateTimeFormat'; COMMENT ON COLUMN "core_i18n"."datetime_timezone_name" IS 'https://402.ecma-international.org/2.0/#sec-InitializeDateTimeFormat'; COMMENT ON COLUMN "core_i18n"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "core_i18n"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "core_i18n"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "core_i18n_component" ("id" SERIAL NOT NULL, "component" character varying NOT NULL, "translation" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "menuId" integer, "language_uid" integer, "createdById" integer, CONSTRAINT "PK_3e99235698d161836fd994237a3" PRIMARY KEY ("id")); COMMENT ON COLUMN "core_i18n_component"."component" IS 'Component Identifier'; COMMENT ON COLUMN "core_i18n_component"."translation" IS 'Translation value'; COMMENT ON COLUMN "core_i18n_component"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "core_i18n_component"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "core_i18n_component"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "core_log_login" ("id" SERIAL NOT NULL, "log_meta" text NOT NULL, "logged_at" TIMESTAMP NOT NULL DEFAULT '2022-10-7 4:43:42', "accountId" integer, CONSTRAINT "PK_43616cb6981ca08c669284449d1" PRIMARY KEY ("id")); COMMENT ON COLUMN "core_log_login"."log_meta" IS 'Login meta request'; COMMENT ON COLUMN "core_log_login"."logged_at" IS 'When it was affected'`);
        await queryRunner.query(`CREATE TABLE "core_log_activity" ("id" SERIAL NOT NULL, "method" character varying NOT NULL, "table_target" character varying NOT NULL, "table_identifier" character varying NOT NULL, "log_meta" text NOT NULL, "action" character(1) NOT NULL, "old_meta" text NOT NULL, "new_meta" text NOT NULL, "logged_at" TIMESTAMP NOT NULL DEFAULT '2022-10-7 4:43:42', "accountId" integer, "loginIdId" integer, CONSTRAINT "PK_2afee75f903c12f36875a8ed6a6" PRIMARY KEY ("id")); COMMENT ON COLUMN "core_log_activity"."method" IS 'Http request type'; COMMENT ON COLUMN "core_log_activity"."table_target" IS 'Table that affected by changes'; COMMENT ON COLUMN "core_log_activity"."table_identifier" IS 'Foreign identifier that affected'; COMMENT ON COLUMN "core_log_activity"."log_meta" IS 'Http request meta data'; COMMENT ON COLUMN "core_log_activity"."action" IS 'Data changes behavior'; COMMENT ON COLUMN "core_log_activity"."old_meta" IS 'Old data before affected'; COMMENT ON COLUMN "core_log_activity"."new_meta" IS 'New data after affected'; COMMENT ON COLUMN "core_log_activity"."logged_at" IS 'When it was affected'`);
        await queryRunner.query(`CREATE TABLE "master_item_brand" ("id" SERIAL NOT NULL, "code" character varying NOT NULL, "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "createdById" integer, CONSTRAINT "UQ_610a5b761b9f247d00f6a7d037c" UNIQUE ("code"), CONSTRAINT "PK_1d1894bee704903089fa4dfbd11" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_item_brand"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_item_brand"."name" IS 'Common name to identify brands'; COMMENT ON COLUMN "master_item_brand"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_item_brand"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_brand"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_brand"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_item" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "brandId" integer, "createdById" integer, CONSTRAINT "PK_455f2208f03ee75d58d770cf2eb" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_item"."name" IS 'Common name to identify current item'; COMMENT ON COLUMN "master_item"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_item"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_item_unit" ("id" SERIAL NOT NULL, "code" character varying NOT NULL, "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "createdById" integer, CONSTRAINT "UQ_5e5bab00dfb0510d87c279ebc46" UNIQUE ("code"), CONSTRAINT "PK_ee2d737d06456094630eb83564d" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_item_unit"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_item_unit"."name" IS 'Full unit name'; COMMENT ON COLUMN "master_item_unit"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_item_unit"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_unit"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_unit"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_supplier" ("id" SERIAL NOT NULL, "code" character varying NOT NULL, "name" character varying NOT NULL, "phone_number" character varying NOT NULL, "fax_number" character varying NOT NULL, "email" character varying NOT NULL, "pic_name" character varying NOT NULL, "address" text NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "createdById" integer, CONSTRAINT "UQ_11c7fcc63fe9a16f613a2461d54" UNIQUE ("code"), CONSTRAINT "PK_ec680df4c5328a30f4f4a5cd87b" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_supplier"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_supplier"."name" IS 'Supplier name'; COMMENT ON COLUMN "master_supplier"."phone_number" IS 'Phone to contact'; COMMENT ON COLUMN "master_supplier"."fax_number" IS 'Fax number'; COMMENT ON COLUMN "master_supplier"."email" IS 'Supplier email'; COMMENT ON COLUMN "master_supplier"."pic_name" IS 'Who is people in charge for supplier complain or else'; COMMENT ON COLUMN "master_supplier"."address" IS 'Address'; COMMENT ON COLUMN "master_supplier"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_supplier"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_supplier"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_supplier"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "purchase_order" ("id" SERIAL NOT NULL, "code" character varying NOT NULL, "order_date" TIMESTAMP NOT NULL, "arrival_estimation" TIMESTAMP NOT NULL, "delivery_plan" TIMESTAMP NOT NULL, "payment_code" TIMESTAMP NOT NULL, "invoice_number" character varying NOT NULL, "invoice_date" TIMESTAMP NOT NULL, "total_charge" numeric(7,2) NOT NULL, "discount" numeric(7,2) NOT NULL, "discount_type" "public"."purchase_order_discount_type_enum" NOT NULL DEFAULT 'percentage', "total_final" numeric(7,2) NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "supplierId" integer, "createdById" integer, CONSTRAINT "PK_ad3e1c7b862f4043b103a6c8c60" PRIMARY KEY ("id")); COMMENT ON COLUMN "purchase_order"."code" IS 'Auto generated code'; COMMENT ON COLUMN "purchase_order"."order_date" IS 'Order time. You can specify order time not the same with current time'; COMMENT ON COLUMN "purchase_order"."arrival_estimation" IS 'Est. when to arrival'; COMMENT ON COLUMN "purchase_order"."delivery_plan" IS 'Est. when to delivery'; COMMENT ON COLUMN "purchase_order"."payment_code" IS 'Est. when to arrival'; COMMENT ON COLUMN "purchase_order"."invoice_number" IS 'Supplier invoice number if exists'; COMMENT ON COLUMN "purchase_order"."invoice_date" IS 'Invoice date. When it will charged'; COMMENT ON COLUMN "purchase_order"."discount_type" IS 'percentage, amount'; COMMENT ON COLUMN "purchase_order"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "purchase_order"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "purchase_order"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "purchase_order"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "good_receipt_note" ("id" SERIAL NOT NULL, "code" character varying NOT NULL, "grn_number" text NOT NULL, "courier_name" character varying NOT NULL, "arrival_time" TIMESTAMP NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "supplierId" integer, "purchaseOrderId" integer, "createdById" integer, CONSTRAINT "PK_cf4dcbd49d36508a0315b3b2f40" PRIMARY KEY ("id")); COMMENT ON COLUMN "good_receipt_note"."code" IS 'Auto generated code'; COMMENT ON COLUMN "good_receipt_note"."grn_number" IS 'GRN that followed by courier'; COMMENT ON COLUMN "good_receipt_note"."courier_name" IS 'Courier name'; COMMENT ON COLUMN "good_receipt_note"."arrival_time" IS 'When packages arrived'; COMMENT ON COLUMN "good_receipt_note"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "good_receipt_note"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "good_receipt_note"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "good_receipt_note"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "good_receipt_note_detail" ("id" SERIAL NOT NULL, "qty" numeric(7,2) NOT NULL, "batch_code" character varying NOT NULL, "expired_date" TIMESTAMP, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "goodReceiptNoteId" integer, "itemId" integer, "unitId" integer, "createdById" integer, CONSTRAINT "PK_5f997552514b92dc81d08e0511e" PRIMARY KEY ("id")); COMMENT ON COLUMN "good_receipt_note_detail"."batch_code" IS 'Batch Code'; COMMENT ON COLUMN "good_receipt_note_detail"."expired_date" IS 'Item expired'; COMMENT ON COLUMN "good_receipt_note_detail"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "good_receipt_note_detail"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "good_receipt_note_detail"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "good_receipt_note_detail"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_item_batch" ("id" SERIAL NOT NULL, "code" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "itemId" integer, CONSTRAINT "PK_0a5b48166122930bed0d8436d6a" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_item_batch"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_item_batch"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_batch"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_batch"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_item_category" ("id" SERIAL NOT NULL, "code" character varying NOT NULL, "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "parentId" integer, CONSTRAINT "UQ_4ef89ac03dcdcddaa6d699131b6" UNIQUE ("code"), CONSTRAINT "PK_e1f369e8bfbd1841a93949c696d" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_item_category"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_item_category"."name" IS 'Common name to identify current item category'; COMMENT ON COLUMN "master_item_category"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_item_category"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_category"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_category"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_stock_point" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "address" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "createdById" integer, CONSTRAINT "PK_bf407a433bb02f39508550c5075" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_stock_point"."name" IS 'A stock point is a location that contains stock inventory. You can specify several stock point to hold any stock for any purposes'; COMMENT ON COLUMN "master_stock_point"."address" IS 'A stock may placed at different location one each others'; COMMENT ON COLUMN "master_stock_point"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_stock_point"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_stock_point"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_stock_point"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_item_monitoring" ("id" SERIAL NOT NULL, "minimum" numeric(7,2) NOT NULL, "maximum" numeric(7,2) NOT NULL, "location" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "itemId" integer, "stockPointId" integer, CONSTRAINT "PK_cb812e54bd72255a536f73fdabb" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_item_monitoring"."location" IS 'Rack location labelling so make it easier to found'; COMMENT ON COLUMN "master_item_monitoring"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_monitoring"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_monitoring"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_medication" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "generic_name" character varying NOT NULL, "aliases" character varying NOT NULL, "brandId" integer, "createdById" integer, CONSTRAINT "PK_ba6dc71776aed2d801fe0406d4a" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_medication"."name" IS 'Common name to identify current item'; COMMENT ON COLUMN "master_medication"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_medication"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_medication"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_medication"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "purchase_order_detail" ("id" SERIAL NOT NULL, "qty" numeric(7,2) NOT NULL, "total_charge" numeric(7,2) NOT NULL, "discount" numeric(7,2) NOT NULL, "discount_type" "public"."purchase_order_detail_discount_type_enum" NOT NULL DEFAULT 'percentage', "total_final" numeric(7,2) NOT NULL, "status" "public"."purchase_order_detail_status_enum" NOT NULL DEFAULT 'new', "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "purchaseOrderId" integer, "itemId" integer, "unitId" integer, "createdById" integer, CONSTRAINT "PK_51029a6e129ce3c436c352f1a76" PRIMARY KEY ("id")); COMMENT ON COLUMN "purchase_order_detail"."discount_type" IS 'Discount type : percentage, amount'; COMMENT ON COLUMN "purchase_order_detail"."status" IS 'new, progress'; COMMENT ON COLUMN "purchase_order_detail"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "purchase_order_detail"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "purchase_order_detail"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "purchase_order_detail"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "stock_log" ("id" SERIAL NOT NULL, "type" "public"."stock_log_type_enum" NOT NULL DEFAULT 'in', "qty" numeric(7,2) NOT NULL, "balance" numeric(7,2) NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "itemId" integer, "batchId" integer, "createdById" integer, CONSTRAINT "PK_dd813fd36d180c94059c7a4f0fc" PRIMARY KEY ("id")); COMMENT ON COLUMN "stock_log"."type" IS 'in or out'; COMMENT ON COLUMN "stock_log"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "stock_log"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "stock_log"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "stock_log"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "stock" ("id" SERIAL NOT NULL, "qty" numeric(7,2) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "itemId" integer, "batchId" integer, "createdById" integer, CONSTRAINT "PK_092bc1fc7d860426a1dec5aa8e9" PRIMARY KEY ("id")); COMMENT ON COLUMN "stock"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "stock"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "stock"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`ALTER TABLE "account" ADD CONSTRAINT "FK_7698accabc7e0699084b50c938f" FOREIGN KEY ("authorityId") REFERENCES "account_authority"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account" ADD CONSTRAINT "FK_781c791a345b169df8a1f04b5e7" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_authority" ADD CONSTRAINT "FK_fcc681f05dc8e074be18b3a9958" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_menu_group" ADD CONSTRAINT "FK_88b8844431d749991e2f5b04e75" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_menu" ADD CONSTRAINT "FK_1a103ee104ef99d4ad544a770cc" FOREIGN KEY ("menuGroupId") REFERENCES "core_menu_group"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_menu" ADD CONSTRAINT "FK_bbc3987214fcc247f21808b9e8a" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_menu_permission" ADD CONSTRAINT "FK_152c364766942de903e4b9b074d" FOREIGN KEY ("menuId") REFERENCES "core_menu"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_menu_permission" ADD CONSTRAINT "FK_bbbb6f80009542f099d277086c9" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_permission" ADD CONSTRAINT "FK_67c76018a72dcddb3320388a442" FOREIGN KEY ("accountId") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_permission" ADD CONSTRAINT "FK_0fa360f1517ea22443174914e58" FOREIGN KEY ("permissionId") REFERENCES "core_menu_permission"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_permission" ADD CONSTRAINT "FK_b4a43e353e49d52a949f893faa9" FOREIGN KEY ("grantedById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_privileges" ADD CONSTRAINT "FK_b7b34370911dfa0b66db677e179" FOREIGN KEY ("accountId") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_privileges" ADD CONSTRAINT "FK_b7ce5fe7d4642668571b7724d80" FOREIGN KEY ("menuId") REFERENCES "core_menu"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_privileges" ADD CONSTRAINT "FK_a741d7438452197185f764e622c" FOREIGN KEY ("grantedById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_i18n" ADD CONSTRAINT "FK_3cfc060fb3bc42465207a293756" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_i18n_component" ADD CONSTRAINT "FK_c4aaa19bcf4ec2e4855f1bc58b4" FOREIGN KEY ("menuId") REFERENCES "core_menu"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_i18n_component" ADD CONSTRAINT "FK_b45aa82aad72224dee29b440118" FOREIGN KEY ("language_uid") REFERENCES "core_i18n"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_i18n_component" ADD CONSTRAINT "FK_49262f1c00d60c8a09475e33697" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_log_login" ADD CONSTRAINT "FK_797ae0e3a1925498a505b548792" FOREIGN KEY ("accountId") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_log_activity" ADD CONSTRAINT "FK_40b3b78a80cd13d4e8064ac5ce8" FOREIGN KEY ("accountId") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_log_activity" ADD CONSTRAINT "FK_aea4dca783bbf5b5df82c5f0641" FOREIGN KEY ("loginIdId") REFERENCES "core_log_login"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_brand" ADD CONSTRAINT "FK_ec66f28aa333081b3d3058d81a7" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item" ADD CONSTRAINT "FK_c95876cd56dc622415eab0e9cc8" FOREIGN KEY ("brandId") REFERENCES "master_item_brand"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item" ADD CONSTRAINT "FK_3d3884c2212b3374e71b1a8db0a" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_unit" ADD CONSTRAINT "FK_900228d52c41902c47d782c1e0a" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_supplier" ADD CONSTRAINT "FK_797d5f98b85c066a7d7e9e1e9a0" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order" ADD CONSTRAINT "FK_e4ea5841622429c12889a487f31" FOREIGN KEY ("supplierId") REFERENCES "master_supplier"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order" ADD CONSTRAINT "FK_2947cfdfcc6ba31b0a0dc1dab83" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" ADD CONSTRAINT "FK_6dea11ac7ae780ed774e0c3d148" FOREIGN KEY ("supplierId") REFERENCES "master_supplier"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" ADD CONSTRAINT "FK_9b70b0288c186a56114c8e7dd88" FOREIGN KEY ("purchaseOrderId") REFERENCES "purchase_order"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" ADD CONSTRAINT "FK_720614ee5d97c3ca54deebfe0be" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" ADD CONSTRAINT "FK_f60e33a1060ebfde59365d74972" FOREIGN KEY ("goodReceiptNoteId") REFERENCES "good_receipt_note"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" ADD CONSTRAINT "FK_47836159bc0ccc2cee5a614d946" FOREIGN KEY ("itemId") REFERENCES "master_item"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" ADD CONSTRAINT "FK_1370aabe5489e1a6ea6aaa91592" FOREIGN KEY ("unitId") REFERENCES "master_item_unit"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" ADD CONSTRAINT "FK_06255c2f67dbab15cb80988c901" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_batch" ADD CONSTRAINT "FK_e85a210f2378b6e0daea3fba6a5" FOREIGN KEY ("itemId") REFERENCES "master_item"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_category" ADD CONSTRAINT "FK_7d2ee73e2d7bb247ed972d364ac" FOREIGN KEY ("parentId") REFERENCES "master_item_category"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_stock_point" ADD CONSTRAINT "FK_23b24c8825a2818ea9f644933a4" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_monitoring" ADD CONSTRAINT "FK_c2c0bfa2124c1e7717ec1f45c9e" FOREIGN KEY ("itemId") REFERENCES "master_item"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_monitoring" ADD CONSTRAINT "FK_3783e11d66127d17963c6428d84" FOREIGN KEY ("stockPointId") REFERENCES "master_stock_point"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_medication" ADD CONSTRAINT "FK_6fc55a705d17fd5c909fe57511c" FOREIGN KEY ("brandId") REFERENCES "master_item_brand"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_medication" ADD CONSTRAINT "FK_ae53076d7dbc22367f90213e026" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" ADD CONSTRAINT "FK_8da67d8be88e9d95b40f0f0931b" FOREIGN KEY ("purchaseOrderId") REFERENCES "purchase_order"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" ADD CONSTRAINT "FK_d0a96a5bd5ee18a9ce5205e8c4e" FOREIGN KEY ("itemId") REFERENCES "master_item"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" ADD CONSTRAINT "FK_ee5328f406ad3720ddc108e8656" FOREIGN KEY ("unitId") REFERENCES "master_item_unit"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" ADD CONSTRAINT "FK_51972955f065fa30b8fa8f1ed55" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_log" ADD CONSTRAINT "FK_29ed07e0a05e37daf466c38e6c0" FOREIGN KEY ("itemId") REFERENCES "master_item"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_log" ADD CONSTRAINT "FK_47c7288b04ee08636bff287a4d9" FOREIGN KEY ("batchId") REFERENCES "master_item_batch"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_log" ADD CONSTRAINT "FK_bfdb95fb2f736fe919bc5a64d73" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock" ADD CONSTRAINT "FK_623dbc561abc7fade5a85931712" FOREIGN KEY ("itemId") REFERENCES "master_item"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock" ADD CONSTRAINT "FK_a2cfb526203263fab8d5ce85053" FOREIGN KEY ("batchId") REFERENCES "master_item_batch"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock" ADD CONSTRAINT "FK_801e7f94cda68a0f3f008c19a72" FOREIGN KEY ("createdById") REFERENCES "account"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "stock" DROP CONSTRAINT "FK_801e7f94cda68a0f3f008c19a72"`);
        await queryRunner.query(`ALTER TABLE "stock" DROP CONSTRAINT "FK_a2cfb526203263fab8d5ce85053"`);
        await queryRunner.query(`ALTER TABLE "stock" DROP CONSTRAINT "FK_623dbc561abc7fade5a85931712"`);
        await queryRunner.query(`ALTER TABLE "stock_log" DROP CONSTRAINT "FK_bfdb95fb2f736fe919bc5a64d73"`);
        await queryRunner.query(`ALTER TABLE "stock_log" DROP CONSTRAINT "FK_47c7288b04ee08636bff287a4d9"`);
        await queryRunner.query(`ALTER TABLE "stock_log" DROP CONSTRAINT "FK_29ed07e0a05e37daf466c38e6c0"`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" DROP CONSTRAINT "FK_51972955f065fa30b8fa8f1ed55"`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" DROP CONSTRAINT "FK_ee5328f406ad3720ddc108e8656"`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" DROP CONSTRAINT "FK_d0a96a5bd5ee18a9ce5205e8c4e"`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" DROP CONSTRAINT "FK_8da67d8be88e9d95b40f0f0931b"`);
        await queryRunner.query(`ALTER TABLE "master_medication" DROP CONSTRAINT "FK_ae53076d7dbc22367f90213e026"`);
        await queryRunner.query(`ALTER TABLE "master_medication" DROP CONSTRAINT "FK_6fc55a705d17fd5c909fe57511c"`);
        await queryRunner.query(`ALTER TABLE "master_item_monitoring" DROP CONSTRAINT "FK_3783e11d66127d17963c6428d84"`);
        await queryRunner.query(`ALTER TABLE "master_item_monitoring" DROP CONSTRAINT "FK_c2c0bfa2124c1e7717ec1f45c9e"`);
        await queryRunner.query(`ALTER TABLE "master_stock_point" DROP CONSTRAINT "FK_23b24c8825a2818ea9f644933a4"`);
        await queryRunner.query(`ALTER TABLE "master_item_category" DROP CONSTRAINT "FK_7d2ee73e2d7bb247ed972d364ac"`);
        await queryRunner.query(`ALTER TABLE "master_item_batch" DROP CONSTRAINT "FK_e85a210f2378b6e0daea3fba6a5"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" DROP CONSTRAINT "FK_06255c2f67dbab15cb80988c901"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" DROP CONSTRAINT "FK_1370aabe5489e1a6ea6aaa91592"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" DROP CONSTRAINT "FK_47836159bc0ccc2cee5a614d946"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" DROP CONSTRAINT "FK_f60e33a1060ebfde59365d74972"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" DROP CONSTRAINT "FK_720614ee5d97c3ca54deebfe0be"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" DROP CONSTRAINT "FK_9b70b0288c186a56114c8e7dd88"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" DROP CONSTRAINT "FK_6dea11ac7ae780ed774e0c3d148"`);
        await queryRunner.query(`ALTER TABLE "purchase_order" DROP CONSTRAINT "FK_2947cfdfcc6ba31b0a0dc1dab83"`);
        await queryRunner.query(`ALTER TABLE "purchase_order" DROP CONSTRAINT "FK_e4ea5841622429c12889a487f31"`);
        await queryRunner.query(`ALTER TABLE "master_supplier" DROP CONSTRAINT "FK_797d5f98b85c066a7d7e9e1e9a0"`);
        await queryRunner.query(`ALTER TABLE "master_item_unit" DROP CONSTRAINT "FK_900228d52c41902c47d782c1e0a"`);
        await queryRunner.query(`ALTER TABLE "master_item" DROP CONSTRAINT "FK_3d3884c2212b3374e71b1a8db0a"`);
        await queryRunner.query(`ALTER TABLE "master_item" DROP CONSTRAINT "FK_c95876cd56dc622415eab0e9cc8"`);
        await queryRunner.query(`ALTER TABLE "master_item_brand" DROP CONSTRAINT "FK_ec66f28aa333081b3d3058d81a7"`);
        await queryRunner.query(`ALTER TABLE "core_log_activity" DROP CONSTRAINT "FK_aea4dca783bbf5b5df82c5f0641"`);
        await queryRunner.query(`ALTER TABLE "core_log_activity" DROP CONSTRAINT "FK_40b3b78a80cd13d4e8064ac5ce8"`);
        await queryRunner.query(`ALTER TABLE "core_log_login" DROP CONSTRAINT "FK_797ae0e3a1925498a505b548792"`);
        await queryRunner.query(`ALTER TABLE "core_i18n_component" DROP CONSTRAINT "FK_49262f1c00d60c8a09475e33697"`);
        await queryRunner.query(`ALTER TABLE "core_i18n_component" DROP CONSTRAINT "FK_b45aa82aad72224dee29b440118"`);
        await queryRunner.query(`ALTER TABLE "core_i18n_component" DROP CONSTRAINT "FK_c4aaa19bcf4ec2e4855f1bc58b4"`);
        await queryRunner.query(`ALTER TABLE "core_i18n" DROP CONSTRAINT "FK_3cfc060fb3bc42465207a293756"`);
        await queryRunner.query(`ALTER TABLE "account_privileges" DROP CONSTRAINT "FK_a741d7438452197185f764e622c"`);
        await queryRunner.query(`ALTER TABLE "account_privileges" DROP CONSTRAINT "FK_b7ce5fe7d4642668571b7724d80"`);
        await queryRunner.query(`ALTER TABLE "account_privileges" DROP CONSTRAINT "FK_b7b34370911dfa0b66db677e179"`);
        await queryRunner.query(`ALTER TABLE "account_permission" DROP CONSTRAINT "FK_b4a43e353e49d52a949f893faa9"`);
        await queryRunner.query(`ALTER TABLE "account_permission" DROP CONSTRAINT "FK_0fa360f1517ea22443174914e58"`);
        await queryRunner.query(`ALTER TABLE "account_permission" DROP CONSTRAINT "FK_67c76018a72dcddb3320388a442"`);
        await queryRunner.query(`ALTER TABLE "core_menu_permission" DROP CONSTRAINT "FK_bbbb6f80009542f099d277086c9"`);
        await queryRunner.query(`ALTER TABLE "core_menu_permission" DROP CONSTRAINT "FK_152c364766942de903e4b9b074d"`);
        await queryRunner.query(`ALTER TABLE "core_menu" DROP CONSTRAINT "FK_bbc3987214fcc247f21808b9e8a"`);
        await queryRunner.query(`ALTER TABLE "core_menu" DROP CONSTRAINT "FK_1a103ee104ef99d4ad544a770cc"`);
        await queryRunner.query(`ALTER TABLE "core_menu_group" DROP CONSTRAINT "FK_88b8844431d749991e2f5b04e75"`);
        await queryRunner.query(`ALTER TABLE "account_authority" DROP CONSTRAINT "FK_fcc681f05dc8e074be18b3a9958"`);
        await queryRunner.query(`ALTER TABLE "account" DROP CONSTRAINT "FK_781c791a345b169df8a1f04b5e7"`);
        await queryRunner.query(`ALTER TABLE "account" DROP CONSTRAINT "FK_7698accabc7e0699084b50c938f"`);
        await queryRunner.query(`DROP TABLE "stock"`);
        await queryRunner.query(`DROP TABLE "stock_log"`);
        await queryRunner.query(`DROP TABLE "purchase_order_detail"`);
        await queryRunner.query(`DROP TABLE "master_medication"`);
        await queryRunner.query(`DROP TABLE "master_item_monitoring"`);
        await queryRunner.query(`DROP TABLE "master_stock_point"`);
        await queryRunner.query(`DROP TABLE "master_item_category"`);
        await queryRunner.query(`DROP TABLE "master_item_batch"`);
        await queryRunner.query(`DROP TABLE "good_receipt_note_detail"`);
        await queryRunner.query(`DROP TABLE "good_receipt_note"`);
        await queryRunner.query(`DROP TABLE "purchase_order"`);
        await queryRunner.query(`DROP TABLE "master_supplier"`);
        await queryRunner.query(`DROP TABLE "master_item_unit"`);
        await queryRunner.query(`DROP TABLE "master_item"`);
        await queryRunner.query(`DROP TABLE "master_item_brand"`);
        await queryRunner.query(`DROP TABLE "core_log_activity"`);
        await queryRunner.query(`DROP TABLE "core_log_login"`);
        await queryRunner.query(`DROP TABLE "core_i18n_component"`);
        await queryRunner.query(`DROP TABLE "core_i18n"`);
        await queryRunner.query(`DROP TABLE "account_privileges"`);
        await queryRunner.query(`DROP TABLE "account_permission"`);
        await queryRunner.query(`DROP TABLE "core_menu_permission"`);
        await queryRunner.query(`DROP TABLE "core_menu"`);
        await queryRunner.query(`DROP TABLE "core_menu_group"`);
        await queryRunner.query(`DROP TABLE "account_authority"`);
        await queryRunner.query(`DROP TABLE "account"`);
    }

}
