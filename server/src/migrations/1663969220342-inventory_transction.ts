import { MigrationInterface, QueryRunner } from "typeorm";

export class inventoryTransction1663969220342 implements MigrationInterface {
    name = 'inventoryTransction1663969220342'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "account_authority" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "PK_f50f7e7c04655f7bd213e89dd1f" PRIMARY KEY ("uid")); COMMENT ON COLUMN "account_authority"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "account_authority"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "account_authority"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "account_authority"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "account" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "email" character varying NOT NULL, "first_name" character varying NOT NULL, "last_name" character varying NOT NULL, "password" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "authorityUid" uuid, CONSTRAINT "PK_402c2e1486caf21fd72ee7c5b1f" PRIMARY KEY ("uid")); COMMENT ON COLUMN "account"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "account"."email" IS 'Account email will used for login'; COMMENT ON COLUMN "account"."first_name" IS 'John'; COMMENT ON COLUMN "account"."last_name" IS 'Doe'; COMMENT ON COLUMN "account"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "account"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "account"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "account"."authorityUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "menu_group" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "PK_1b4355838e113a92087ecb039ee" PRIMARY KEY ("id")); COMMENT ON COLUMN "menu_group"."name" IS 'Group will menu at sidebar'; COMMENT ON COLUMN "menu_group"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "menu_group"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "menu_group"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "menu" ("id" SERIAL NOT NULL, "name" character varying NOT NULL, "identifier" character varying NOT NULL, "url" text DEFAULT '/', "parent" integer NOT NULL, "icon" character varying NOT NULL, "show_on_menu" character(1) NOT NULL, "show_order" integer NOT NULL, "level" integer, "group_color" character varying, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "menuGroupId" integer, CONSTRAINT "PK_35b2a8f47d153ff7a41860cceeb" PRIMARY KEY ("id")); COMMENT ON COLUMN "menu"."name" IS 'Menu caption'; COMMENT ON COLUMN "menu"."identifier" IS 'Vue 3 support'; COMMENT ON COLUMN "menu"."url" IS 'Vue 3 route support'; COMMENT ON COLUMN "menu"."parent" IS 'Other menu id as parent'; COMMENT ON COLUMN "menu"."icon" IS 'PrimeIcon class name'; COMMENT ON COLUMN "menu"."show_on_menu" IS 'Y = show, N = hide'; COMMENT ON COLUMN "menu"."show_order" IS 'Showing order on side panel'; COMMENT ON COLUMN "menu"."level" IS 'Level grouping identifier'; COMMENT ON COLUMN "menu"."group_color" IS 'Theme customer class name for styling'; COMMENT ON COLUMN "menu"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "menu"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "menu"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "menu_permission" ("id" SERIAL NOT NULL, "domiden" character varying NOT NULL, "dispatchname" character varying NOT NULL, "servicegroup" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "menuId" integer, CONSTRAINT "PK_7a69d87de538c0e8ad05c1a1820" PRIMARY KEY ("id")); COMMENT ON COLUMN "menu_permission"."domiden" IS 'For identify dom that granted access'; COMMENT ON COLUMN "menu_permission"."dispatchname" IS 'String dispatch from the dom'; COMMENT ON COLUMN "menu_permission"."servicegroup" IS 'For identify dom service name that contain dispatch function'; COMMENT ON COLUMN "menu_permission"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "menu_permission"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "menu_permission"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "account_permission" ("id" SERIAL NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "accountUid" uuid, "permissionId" integer, "grantedByUid" uuid, CONSTRAINT "PK_202247292378cf3913a1edb41a0" PRIMARY KEY ("id")); COMMENT ON COLUMN "account_permission"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "account_permission"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "account_permission"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "account_permission"."accountUid" IS 'Unique identifier'; COMMENT ON COLUMN "account_permission"."grantedByUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "account_privileges" ("id" SERIAL NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "accountUid" uuid, "menuId" integer, "grantedByUid" uuid, CONSTRAINT "PK_220630f27107c502435de080e05" PRIMARY KEY ("id")); COMMENT ON COLUMN "account_privileges"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "account_privileges"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "account_privileges"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "account_privileges"."accountUid" IS 'Unique identifier'; COMMENT ON COLUMN "account_privileges"."grantedByUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "core_log_login" ("id" SERIAL NOT NULL, "log_meta" text NOT NULL, "logged_at" TIMESTAMP NOT NULL DEFAULT '2022-9-24 4:40:22', "accountUid" uuid, CONSTRAINT "PK_43616cb6981ca08c669284449d1" PRIMARY KEY ("id")); COMMENT ON COLUMN "core_log_login"."log_meta" IS 'Login meta request'; COMMENT ON COLUMN "core_log_login"."logged_at" IS 'When it was affected'; COMMENT ON COLUMN "core_log_login"."accountUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "core_log_activity" ("id" SERIAL NOT NULL, "method" character varying NOT NULL, "table_target" character varying NOT NULL, "table_identifier" character varying NOT NULL, "log_meta" text NOT NULL, "action" character(1) NOT NULL, "old_meta" text NOT NULL, "new_meta" text NOT NULL, "logged_at" TIMESTAMP NOT NULL DEFAULT '2022-9-24 4:40:22', "accountUid" uuid, "loginIdId" integer, CONSTRAINT "PK_2afee75f903c12f36875a8ed6a6" PRIMARY KEY ("id")); COMMENT ON COLUMN "core_log_activity"."method" IS 'Http request type'; COMMENT ON COLUMN "core_log_activity"."table_target" IS 'Table that affected by changes'; COMMENT ON COLUMN "core_log_activity"."table_identifier" IS 'Foreign identifier that affected'; COMMENT ON COLUMN "core_log_activity"."log_meta" IS 'Http request meta data'; COMMENT ON COLUMN "core_log_activity"."action" IS 'Data changes behavior'; COMMENT ON COLUMN "core_log_activity"."old_meta" IS 'Old data before affected'; COMMENT ON COLUMN "core_log_activity"."new_meta" IS 'New data after affected'; COMMENT ON COLUMN "core_log_activity"."logged_at" IS 'When it was affected'; COMMENT ON COLUMN "core_log_activity"."accountUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "master_item_brand" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying NOT NULL, "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "UQ_610a5b761b9f247d00f6a7d037c" UNIQUE ("code"), CONSTRAINT "PK_f810677d4d4f1e6fae2f8498588" PRIMARY KEY ("uid")); COMMENT ON COLUMN "master_item_brand"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "master_item_brand"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_item_brand"."name" IS 'Common name to identify brands'; COMMENT ON COLUMN "master_item_brand"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_item_brand"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_brand"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_brand"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_item" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "brandUid" uuid, CONSTRAINT "PK_f0d8af6c17c960c8d36d356f164" PRIMARY KEY ("uid")); COMMENT ON COLUMN "master_item"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "master_item"."name" IS 'Common name to identify current item'; COMMENT ON COLUMN "master_item"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_item"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "master_item"."brandUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "master_item_unit" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying NOT NULL, "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "UQ_5e5bab00dfb0510d87c279ebc46" UNIQUE ("code"), CONSTRAINT "PK_c0bb7ba39b8d84da03d7f97d696" PRIMARY KEY ("uid")); COMMENT ON COLUMN "master_item_unit"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "master_item_unit"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_item_unit"."name" IS 'Full unit name'; COMMENT ON COLUMN "master_item_unit"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_item_unit"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_unit"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_unit"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_supplier" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying NOT NULL, "name" character varying NOT NULL, "phone_number" character varying NOT NULL, "fax_number" character varying NOT NULL, "email" character varying NOT NULL, "pic_name" character varying NOT NULL, "address" text NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "UQ_11c7fcc63fe9a16f613a2461d54" UNIQUE ("code"), CONSTRAINT "PK_fcde56f12df2ad7858a96580d89" PRIMARY KEY ("uid")); COMMENT ON COLUMN "master_supplier"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "master_supplier"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_supplier"."name" IS 'Supplier name'; COMMENT ON COLUMN "master_supplier"."phone_number" IS 'Phone to contact'; COMMENT ON COLUMN "master_supplier"."fax_number" IS 'Fax number'; COMMENT ON COLUMN "master_supplier"."email" IS 'Supplier email'; COMMENT ON COLUMN "master_supplier"."pic_name" IS 'Who is people in charge for supplier complain or else'; COMMENT ON COLUMN "master_supplier"."address" IS 'Address'; COMMENT ON COLUMN "master_supplier"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_supplier"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_supplier"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_supplier"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "purchase_order" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying NOT NULL, "order_date" TIMESTAMP NOT NULL, "arrival_estimation" TIMESTAMP NOT NULL, "delivery_plan" TIMESTAMP NOT NULL, "payment_code" TIMESTAMP NOT NULL, "invoice_number" character varying NOT NULL, "invoice_date" TIMESTAMP NOT NULL, "total_charge" numeric(7,2) NOT NULL, "discount" numeric(7,2) NOT NULL, "discount_type" "public"."purchase_order_discount_type_enum" NOT NULL DEFAULT 'percentage', "total_final" numeric(7,2) NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "supplierUid" uuid, "createdByUid" uuid, CONSTRAINT "PK_deb1b8047281ddda046d4eb21f3" PRIMARY KEY ("uid")); COMMENT ON COLUMN "purchase_order"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "purchase_order"."code" IS 'Auto generated code'; COMMENT ON COLUMN "purchase_order"."order_date" IS 'Order time. You can specify order time not the same with current time'; COMMENT ON COLUMN "purchase_order"."arrival_estimation" IS 'Est. when to arrival'; COMMENT ON COLUMN "purchase_order"."delivery_plan" IS 'Est. when to delivery'; COMMENT ON COLUMN "purchase_order"."payment_code" IS 'Est. when to arrival'; COMMENT ON COLUMN "purchase_order"."invoice_number" IS 'Supplier invoice number if exists'; COMMENT ON COLUMN "purchase_order"."invoice_date" IS 'Invoice date. When it will charged'; COMMENT ON COLUMN "purchase_order"."discount_type" IS 'percentage, amount'; COMMENT ON COLUMN "purchase_order"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "purchase_order"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "purchase_order"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "purchase_order"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "purchase_order"."supplierUid" IS 'Unique identifier'; COMMENT ON COLUMN "purchase_order"."createdByUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "good_receipt_note" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying NOT NULL, "grn_number" text NOT NULL, "courier_name" character varying NOT NULL, "arrival_time" TIMESTAMP NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "supplierUid" uuid, "purchaseOrderUid" uuid, "createdByUid" uuid, CONSTRAINT "PK_2e6bab9154f8ddcc5eaf34eba4a" PRIMARY KEY ("uid")); COMMENT ON COLUMN "good_receipt_note"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "good_receipt_note"."code" IS 'Auto generated code'; COMMENT ON COLUMN "good_receipt_note"."grn_number" IS 'GRN that followed by courier'; COMMENT ON COLUMN "good_receipt_note"."courier_name" IS 'Courier name'; COMMENT ON COLUMN "good_receipt_note"."arrival_time" IS 'When packages arrived'; COMMENT ON COLUMN "good_receipt_note"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "good_receipt_note"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "good_receipt_note"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "good_receipt_note"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "good_receipt_note"."supplierUid" IS 'Unique identifier'; COMMENT ON COLUMN "good_receipt_note"."purchaseOrderUid" IS 'Unique identifier'; COMMENT ON COLUMN "good_receipt_note"."createdByUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "good_receipt_note_detail" ("id" SERIAL NOT NULL, "qty" numeric(7,2) NOT NULL, "batch_code" character varying NOT NULL, "expired_date" TIMESTAMP, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "goodReceiptNoteUid" uuid, "itemUid" uuid, "unitUid" uuid, "createdByUid" uuid, CONSTRAINT "PK_5f997552514b92dc81d08e0511e" PRIMARY KEY ("id")); COMMENT ON COLUMN "good_receipt_note_detail"."batch_code" IS 'Batch Code'; COMMENT ON COLUMN "good_receipt_note_detail"."expired_date" IS 'Item expired'; COMMENT ON COLUMN "good_receipt_note_detail"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "good_receipt_note_detail"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "good_receipt_note_detail"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "good_receipt_note_detail"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "good_receipt_note_detail"."goodReceiptNoteUid" IS 'Unique identifier'; COMMENT ON COLUMN "good_receipt_note_detail"."itemUid" IS 'Unique identifier'; COMMENT ON COLUMN "good_receipt_note_detail"."unitUid" IS 'Unique identifier'; COMMENT ON COLUMN "good_receipt_note_detail"."createdByUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "master_item_batch" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "itemUid" uuid, CONSTRAINT "PK_f61141cd9704012b2f6c04c24ec" PRIMARY KEY ("uid")); COMMENT ON COLUMN "master_item_batch"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "master_item_batch"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_item_batch"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_batch"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_batch"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "master_item_batch"."itemUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "master_item_category" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "code" character varying NOT NULL, "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "parentUid" uuid, CONSTRAINT "UQ_4ef89ac03dcdcddaa6d699131b6" UNIQUE ("code"), CONSTRAINT "PK_ffd613d1ae25d57dbedf3efd12f" PRIMARY KEY ("uid")); COMMENT ON COLUMN "master_item_category"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "master_item_category"."code" IS 'Auto generated code'; COMMENT ON COLUMN "master_item_category"."name" IS 'Common name to identify current item category'; COMMENT ON COLUMN "master_item_category"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_item_category"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_category"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_category"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "master_item_category"."parentUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "master_stock_point" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "address" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, CONSTRAINT "PK_8b7f642c38c40a3d4b257d12f60" PRIMARY KEY ("uid")); COMMENT ON COLUMN "master_stock_point"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "master_stock_point"."name" IS 'A stock point is a location that contains stock inventory. You can specify several stock point to hold any stock for any purposes'; COMMENT ON COLUMN "master_stock_point"."address" IS 'A stock may placed at different location one each others'; COMMENT ON COLUMN "master_stock_point"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_stock_point"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_stock_point"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_stock_point"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'`);
        await queryRunner.query(`CREATE TABLE "master_item_monitoring" ("id" SERIAL NOT NULL, "minimum" numeric(7,2) NOT NULL, "maximum" numeric(7,2) NOT NULL, "location" character varying NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "itemUid" uuid, "stockPointUid" uuid, CONSTRAINT "PK_cb812e54bd72255a536f73fdabb" PRIMARY KEY ("id")); COMMENT ON COLUMN "master_item_monitoring"."location" IS 'Rack location labelling so make it easier to found'; COMMENT ON COLUMN "master_item_monitoring"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_item_monitoring"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_item_monitoring"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "master_item_monitoring"."itemUid" IS 'Unique identifier'; COMMENT ON COLUMN "master_item_monitoring"."stockPointUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "master_medication" ("uid" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "generic_name" character varying NOT NULL, "aliases" character varying NOT NULL, "brandUid" uuid, CONSTRAINT "PK_5fc370acd068f100a3e7ed442df" PRIMARY KEY ("uid")); COMMENT ON COLUMN "master_medication"."uid" IS 'Unique identifier'; COMMENT ON COLUMN "master_medication"."name" IS 'Common name to identify current item'; COMMENT ON COLUMN "master_medication"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "master_medication"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "master_medication"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "master_medication"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "master_medication"."brandUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TYPE "public"."purchase_order_detail_discount_type_enum" AS ENUM('percentage', 'amount')`);
        await queryRunner.query(`CREATE TYPE "public"."purchase_order_detail_status_enum" AS ENUM('new', 'progress')`);
        await queryRunner.query(`CREATE TABLE "purchase_order_detail" ("id" SERIAL NOT NULL, "qty" numeric(7,2) NOT NULL, "total_charge" numeric(7,2) NOT NULL, "discount" numeric(7,2) NOT NULL, "discount_type" "public"."purchase_order_detail_discount_type_enum" NOT NULL DEFAULT 'percentage', "total_final" numeric(7,2) NOT NULL, "status" "public"."purchase_order_detail_status_enum" NOT NULL DEFAULT 'new', "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "purchaseOrderUid" uuid, "itemUid" uuid, "unitUid" uuid, "createdByUid" uuid, CONSTRAINT "PK_51029a6e129ce3c436c352f1a76" PRIMARY KEY ("id")); COMMENT ON COLUMN "purchase_order_detail"."discount_type" IS 'Discount type : percentage, amount'; COMMENT ON COLUMN "purchase_order_detail"."status" IS 'new, progress'; COMMENT ON COLUMN "purchase_order_detail"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "purchase_order_detail"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "purchase_order_detail"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "purchase_order_detail"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "purchase_order_detail"."purchaseOrderUid" IS 'Unique identifier'; COMMENT ON COLUMN "purchase_order_detail"."itemUid" IS 'Unique identifier'; COMMENT ON COLUMN "purchase_order_detail"."unitUid" IS 'Unique identifier'; COMMENT ON COLUMN "purchase_order_detail"."createdByUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TYPE "public"."stock_log_type_enum" AS ENUM('in', 'out')`);
        await queryRunner.query(`CREATE TABLE "stock_log" ("id" SERIAL NOT NULL, "type" "public"."stock_log_type_enum" NOT NULL DEFAULT 'in', "qty" numeric(7,2) NOT NULL, "balance" numeric(7,2) NOT NULL, "remark" text NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "itemUid" uuid, "batchUid" uuid, CONSTRAINT "PK_dd813fd36d180c94059c7a4f0fc" PRIMARY KEY ("id")); COMMENT ON COLUMN "stock_log"."type" IS 'in or out'; COMMENT ON COLUMN "stock_log"."remark" IS 'Just remark to describe something'; COMMENT ON COLUMN "stock_log"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "stock_log"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "stock_log"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "stock_log"."itemUid" IS 'Unique identifier'; COMMENT ON COLUMN "stock_log"."batchUid" IS 'Unique identifier'`);
        await queryRunner.query(`CREATE TABLE "stock" ("id" SERIAL NOT NULL, "qty" numeric(7,2) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "deleted_at" TIMESTAMP, "itemUid" uuid, "batchUid" uuid, CONSTRAINT "PK_092bc1fc7d860426a1dec5aa8e9" PRIMARY KEY ("id")); COMMENT ON COLUMN "stock"."created_at" IS 'Time when it created'; COMMENT ON COLUMN "stock"."updated_at" IS 'Time when it last updated'; COMMENT ON COLUMN "stock"."deleted_at" IS 'Time when it deleted. If empty that mean it''s active'; COMMENT ON COLUMN "stock"."itemUid" IS 'Unique identifier'; COMMENT ON COLUMN "stock"."batchUid" IS 'Unique identifier'`);
        await queryRunner.query(`ALTER TABLE "account" ADD CONSTRAINT "FK_0f1f855f1020745053b36087e2a" FOREIGN KEY ("authorityUid") REFERENCES "account_authority"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "menu" ADD CONSTRAINT "FK_c68620d2c627287350bda5f1f15" FOREIGN KEY ("menuGroupId") REFERENCES "menu_group"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "menu_permission" ADD CONSTRAINT "FK_c57de8fc6071e94f9fd4199980c" FOREIGN KEY ("menuId") REFERENCES "menu"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_permission" ADD CONSTRAINT "FK_92972dc223758e9791a251a8939" FOREIGN KEY ("accountUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_permission" ADD CONSTRAINT "FK_0fa360f1517ea22443174914e58" FOREIGN KEY ("permissionId") REFERENCES "menu_permission"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_permission" ADD CONSTRAINT "FK_4ae38023725559db026a13b1e7f" FOREIGN KEY ("grantedByUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_privileges" ADD CONSTRAINT "FK_20e1afaaf5bcdb4d7bba56962a7" FOREIGN KEY ("accountUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_privileges" ADD CONSTRAINT "FK_b7ce5fe7d4642668571b7724d80" FOREIGN KEY ("menuId") REFERENCES "menu"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "account_privileges" ADD CONSTRAINT "FK_d8a8574c0da2eed1971d54c52fb" FOREIGN KEY ("grantedByUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_log_login" ADD CONSTRAINT "FK_e8ff97ff5cb2eaba92756055d61" FOREIGN KEY ("accountUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_log_activity" ADD CONSTRAINT "FK_4b1a6eae17c69db92a13c2be64b" FOREIGN KEY ("accountUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "core_log_activity" ADD CONSTRAINT "FK_aea4dca783bbf5b5df82c5f0641" FOREIGN KEY ("loginIdId") REFERENCES "core_log_login"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item" ADD CONSTRAINT "FK_ad4eb3d19a14c16ae02afaed22c" FOREIGN KEY ("brandUid") REFERENCES "master_item_brand"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order" ADD CONSTRAINT "FK_fe5e27a296b1b256558bc05adb7" FOREIGN KEY ("supplierUid") REFERENCES "master_supplier"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order" ADD CONSTRAINT "FK_955df53ff8c437bcbb15172e0f1" FOREIGN KEY ("createdByUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" ADD CONSTRAINT "FK_8567fc4056770a6572d217477e6" FOREIGN KEY ("supplierUid") REFERENCES "master_supplier"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" ADD CONSTRAINT "FK_530da4b1d7344b51d635eba691e" FOREIGN KEY ("purchaseOrderUid") REFERENCES "purchase_order"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" ADD CONSTRAINT "FK_ca6b2023436d84fb07020fa251c" FOREIGN KEY ("createdByUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" ADD CONSTRAINT "FK_7818d93b64608fe3e36a55c3fc8" FOREIGN KEY ("goodReceiptNoteUid") REFERENCES "good_receipt_note"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" ADD CONSTRAINT "FK_502784ccf4b454b4d50a37f5884" FOREIGN KEY ("itemUid") REFERENCES "master_item"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" ADD CONSTRAINT "FK_c69d02ff2f9fdaf0217e4a0cb4a" FOREIGN KEY ("unitUid") REFERENCES "master_item_unit"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" ADD CONSTRAINT "FK_9216634a0b043245b774e6b095b" FOREIGN KEY ("createdByUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_batch" ADD CONSTRAINT "FK_a90b62d4b2dfb0a2ef322c2d9ed" FOREIGN KEY ("itemUid") REFERENCES "master_item"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_category" ADD CONSTRAINT "FK_8a8ec2ccac097c45bf8e255e32c" FOREIGN KEY ("parentUid") REFERENCES "master_item_category"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_monitoring" ADD CONSTRAINT "FK_038aab24493af9a4380e1680ffd" FOREIGN KEY ("itemUid") REFERENCES "master_item"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_item_monitoring" ADD CONSTRAINT "FK_c02d3cfdd8b26fe1d50721bac1e" FOREIGN KEY ("stockPointUid") REFERENCES "master_stock_point"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "master_medication" ADD CONSTRAINT "FK_14386c5fc5804fbc3c13caf1bb1" FOREIGN KEY ("brandUid") REFERENCES "master_item_brand"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" ADD CONSTRAINT "FK_678b7b61cafdab137f6228cc176" FOREIGN KEY ("purchaseOrderUid") REFERENCES "purchase_order"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" ADD CONSTRAINT "FK_4a33bb4eae7d4ccf59412015f10" FOREIGN KEY ("itemUid") REFERENCES "master_item"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" ADD CONSTRAINT "FK_92c60902552ccd299455a3e313c" FOREIGN KEY ("unitUid") REFERENCES "master_item_unit"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" ADD CONSTRAINT "FK_b3b4ae8b453f0cabd0898a983f5" FOREIGN KEY ("createdByUid") REFERENCES "account"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_log" ADD CONSTRAINT "FK_eaa4fc5d5dbdf51e5b31d1e2ed5" FOREIGN KEY ("itemUid") REFERENCES "master_item"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock_log" ADD CONSTRAINT "FK_b64d89383f2fde9911a36cfd82a" FOREIGN KEY ("batchUid") REFERENCES "master_item_batch"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock" ADD CONSTRAINT "FK_b647c7a0eef17da147280334228" FOREIGN KEY ("itemUid") REFERENCES "master_item"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "stock" ADD CONSTRAINT "FK_403e52cb0d624f8690b2f9ebeb3" FOREIGN KEY ("batchUid") REFERENCES "master_item_batch"("uid") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "stock" DROP CONSTRAINT "FK_403e52cb0d624f8690b2f9ebeb3"`);
        await queryRunner.query(`ALTER TABLE "stock" DROP CONSTRAINT "FK_b647c7a0eef17da147280334228"`);
        await queryRunner.query(`ALTER TABLE "stock_log" DROP CONSTRAINT "FK_b64d89383f2fde9911a36cfd82a"`);
        await queryRunner.query(`ALTER TABLE "stock_log" DROP CONSTRAINT "FK_eaa4fc5d5dbdf51e5b31d1e2ed5"`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" DROP CONSTRAINT "FK_b3b4ae8b453f0cabd0898a983f5"`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" DROP CONSTRAINT "FK_92c60902552ccd299455a3e313c"`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" DROP CONSTRAINT "FK_4a33bb4eae7d4ccf59412015f10"`);
        await queryRunner.query(`ALTER TABLE "purchase_order_detail" DROP CONSTRAINT "FK_678b7b61cafdab137f6228cc176"`);
        await queryRunner.query(`ALTER TABLE "master_medication" DROP CONSTRAINT "FK_14386c5fc5804fbc3c13caf1bb1"`);
        await queryRunner.query(`ALTER TABLE "master_item_monitoring" DROP CONSTRAINT "FK_c02d3cfdd8b26fe1d50721bac1e"`);
        await queryRunner.query(`ALTER TABLE "master_item_monitoring" DROP CONSTRAINT "FK_038aab24493af9a4380e1680ffd"`);
        await queryRunner.query(`ALTER TABLE "master_item_category" DROP CONSTRAINT "FK_8a8ec2ccac097c45bf8e255e32c"`);
        await queryRunner.query(`ALTER TABLE "master_item_batch" DROP CONSTRAINT "FK_a90b62d4b2dfb0a2ef322c2d9ed"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" DROP CONSTRAINT "FK_9216634a0b043245b774e6b095b"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" DROP CONSTRAINT "FK_c69d02ff2f9fdaf0217e4a0cb4a"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" DROP CONSTRAINT "FK_502784ccf4b454b4d50a37f5884"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note_detail" DROP CONSTRAINT "FK_7818d93b64608fe3e36a55c3fc8"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" DROP CONSTRAINT "FK_ca6b2023436d84fb07020fa251c"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" DROP CONSTRAINT "FK_530da4b1d7344b51d635eba691e"`);
        await queryRunner.query(`ALTER TABLE "good_receipt_note" DROP CONSTRAINT "FK_8567fc4056770a6572d217477e6"`);
        await queryRunner.query(`ALTER TABLE "purchase_order" DROP CONSTRAINT "FK_955df53ff8c437bcbb15172e0f1"`);
        await queryRunner.query(`ALTER TABLE "purchase_order" DROP CONSTRAINT "FK_fe5e27a296b1b256558bc05adb7"`);
        await queryRunner.query(`ALTER TABLE "master_item" DROP CONSTRAINT "FK_ad4eb3d19a14c16ae02afaed22c"`);
        await queryRunner.query(`ALTER TABLE "core_log_activity" DROP CONSTRAINT "FK_aea4dca783bbf5b5df82c5f0641"`);
        await queryRunner.query(`ALTER TABLE "core_log_activity" DROP CONSTRAINT "FK_4b1a6eae17c69db92a13c2be64b"`);
        await queryRunner.query(`ALTER TABLE "core_log_login" DROP CONSTRAINT "FK_e8ff97ff5cb2eaba92756055d61"`);
        await queryRunner.query(`ALTER TABLE "account_privileges" DROP CONSTRAINT "FK_d8a8574c0da2eed1971d54c52fb"`);
        await queryRunner.query(`ALTER TABLE "account_privileges" DROP CONSTRAINT "FK_b7ce5fe7d4642668571b7724d80"`);
        await queryRunner.query(`ALTER TABLE "account_privileges" DROP CONSTRAINT "FK_20e1afaaf5bcdb4d7bba56962a7"`);
        await queryRunner.query(`ALTER TABLE "account_permission" DROP CONSTRAINT "FK_4ae38023725559db026a13b1e7f"`);
        await queryRunner.query(`ALTER TABLE "account_permission" DROP CONSTRAINT "FK_0fa360f1517ea22443174914e58"`);
        await queryRunner.query(`ALTER TABLE "account_permission" DROP CONSTRAINT "FK_92972dc223758e9791a251a8939"`);
        await queryRunner.query(`ALTER TABLE "menu_permission" DROP CONSTRAINT "FK_c57de8fc6071e94f9fd4199980c"`);
        await queryRunner.query(`ALTER TABLE "menu" DROP CONSTRAINT "FK_c68620d2c627287350bda5f1f15"`);
        await queryRunner.query(`ALTER TABLE "account" DROP CONSTRAINT "FK_0f1f855f1020745053b36087e2a"`);
        await queryRunner.query(`DROP TABLE "stock"`);
        await queryRunner.query(`DROP TABLE "stock_log"`);
        await queryRunner.query(`DROP TYPE "public"."stock_log_type_enum"`);
        await queryRunner.query(`DROP TABLE "purchase_order_detail"`);
        await queryRunner.query(`DROP TYPE "public"."purchase_order_detail_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."purchase_order_detail_discount_type_enum"`);
        await queryRunner.query(`DROP TABLE "master_medication"`);
        await queryRunner.query(`DROP TABLE "master_item_monitoring"`);
        await queryRunner.query(`DROP TABLE "master_stock_point"`);
        await queryRunner.query(`DROP TABLE "master_item_category"`);
        await queryRunner.query(`DROP TABLE "master_item_batch"`);
        await queryRunner.query(`DROP TABLE "good_receipt_note_detail"`);
        await queryRunner.query(`DROP TABLE "good_receipt_note"`);
        await queryRunner.query(`DROP TABLE "purchase_order"`);
        await queryRunner.query(`DROP TABLE "master_supplier"`);
        await queryRunner.query(`DROP TABLE "master_item_unit"`);
        await queryRunner.query(`DROP TABLE "master_item"`);
        await queryRunner.query(`DROP TABLE "master_item_brand"`);
        await queryRunner.query(`DROP TABLE "core_log_activity"`);
        await queryRunner.query(`DROP TABLE "core_log_login"`);
        await queryRunner.query(`DROP TABLE "account_privileges"`);
        await queryRunner.query(`DROP TABLE "account_permission"`);
        await queryRunner.query(`DROP TABLE "menu_permission"`);
        await queryRunner.query(`DROP TABLE "menu"`);
        await queryRunner.query(`DROP TABLE "menu_group"`);
        await queryRunner.query(`DROP TABLE "account"`);
        await queryRunner.query(`DROP TABLE "account_authority"`);
    }

}
